openapi: 3.0.3
info:
title: Payment Processing API
description: API for processing payments using different payment methods
version: 1.0.0

servers:
- url: http://localhost:8080
  description: Local development server

paths:
/api/payment:
post:
summary: Process a payment
description: Process a payment for a user using the specified payment method and amount
operationId: processPayment
requestBody:
required: true
content:
application/json:
schema:
$ref: '#/components/schemas/PaymentRequest'
example:
userId: "user123"
paymentMethod: "CREDIT_CARD"
amount: 99.99
responses:
'200':
description: Payment processed successfully
content:
application/json:
schema:
$ref: '#/components/schemas/PaymentResult'
example:
success: true
userId: "user123"
paymentMethod: "CREDIT_CARD"
amount: 99.99
transactionId: "TRX-1234567890-123"
message: "Payment processed successfully"
'400':
description: Invalid request
content:
application/json:
schema:
$ref: '#/components/schemas/ErrorResponse'
example:
error: "Invalid amount: Amount must be greater than 0"
'405':
description: Method not allowed
content:
application/json:
schema:
$ref: '#/components/schemas/ErrorResponse'
example:
error: "Method not allowed"
'500':
description: Internal server error
content:
application/json:
schema:
$ref: '#/components/schemas/ErrorResponse'
example:
error: "Internal server error occurred"

components:
schemas:
PaymentMethod:
type: string
enum: [CREDIT_CARD, PAYPAL, PAYLIB]
description: Available payment methods

    PaymentRequest:
      type: object
      required:
        - userId
        - paymentMethod
        - amount
      properties:
        userId:
          type: string
          description: Unique identifier of the user
          example: "user123"
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        amount:
          type: number
          format: double
          minimum: 0.01
          description: The amount to be paid in the transaction
          example: 99.99
      
    PaymentResult:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the payment was successful
          example: true
        userId:
          type: string
          description: Unique identifier of the user
          example: "user123"
        paymentMethod:
          $ref: '#/components/schemas/PaymentMethod'
        amount:
          type: number
          format: double
          description: The amount that was paid in the transaction
          example: 99.99
        transactionId:
          type: string
          description: Unique identifier for the transaction
          example: "TRX-1234567890-123"
        message:
          type: string
          description: Description of the payment result
          example: "Payment processed successfully"
          
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message describing what went wrong
          example: "Invalid payment method"